// CLASS GENERATORS

@mixin repeat-unit-classes-map($name-map, $start, $end, $unit, $increment: 1) {
	@each $type in $name-map {
		$key: nth($type, 1);
		$value: nth($type, 2);

		/* #{$type} */

		@for $i from $start through $end {
			.#{str-slice($key, 0, 1)}#{str-slice($value, 0, 1)}\:#{$i * $increment} {
				#{$key}-#{$value}: increment($i, $increment, $unit);
			}
		}
	}
}

// Display Class Generator
@mixin namespaced-classes($namespace, $name-map, $property) {
	@each $type in $name-map {
		.#{$namespace}-#{$type} {
			#{$property}: #{$type};
		}
	}
}

// Attribute Class Generator
@mixin attr-classes($attribute, $name-map, $property) {
	@each $type in $name-map {
		[#{$attribute}="#{$type}"] {
			#{$property}: #{$type};
		}
	}
}

@mixin box($param-map) {
	@each $a in $param-map {
		border-#{$a}: var(--s-box-border-#{$a});
	}
}

// CUSTOM VARIABLES
@mixin color-variables($type, $shades) {
	@each $shade, $p in $shades {
		--s-c-brand-#{$type}-#{$shade}: hsl(var(--s-color-brand-h), var(--s-color-brand-s), calc(var(--s-color-brand-l) #{$p}));
	}
}
